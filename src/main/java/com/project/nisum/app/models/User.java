package com.project.nisum.app.models;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.Builder;
import org.hibernate.annotations.GenericGenerator;

import java.sql.Timestamp;
import java.util.List;
import java.util.UUID;

/**
 * User is an entity class representing a user in the database.
 * It contains the user's id, name, email, creation timestamp, modification timestamp, last login timestamp, token, active status, password, and a list of associated phones.
 */
@Entity
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Schema(description = "User")
@Table(name = "users",
        uniqueConstraints = {
                @UniqueConstraint(columnNames = "email")
        })
public class User {

    /**
     * The user's id.
     * It is a UUID generated by the "UUID" generator.
     */
    @Id
    @GeneratedValue(generator = "UUID")
    @GenericGenerator(
            name = "UUID",
            strategy = "org.hibernate.id.UUIDGenerator",
            parameters = {
                    @org.hibernate.annotations.Parameter(
                            name = "uuid_gen_strategy_class",
                            value = "org.hibernate.id.uuid.CustomVersionOneStrategy"
                    )
            }
    )
    private UUID id;

    /**
     * The user's name.
     * It must not be blank and its size must not exceed 30 characters.
     */
    @NotBlank
    @Size(max = 30)
    private String name;

    /**
     * The user's email.
     * It must not be blank, its size must not exceed 50 characters, and it must be a well-formed email address.
     */
    @NotBlank
    @Size(max = 50)
    @Email
    private String email;

    /**
     * The timestamp when the user was created.
     */
    private Timestamp created;

    /**
     * The timestamp when the user was last modified.
     */
    private Timestamp modified;

    /**
     * The timestamp of the user's last login.
     */
    private Timestamp lastLogin;

    /**
     * The user's token.
     */
    private String token;

    /**
     * The user's active status.
     */
    private Boolean isActive;

    /**
     * The user's password.
     * It must not be blank.
     */
    @NotBlank
    private String password;

    /**
     * The list of phones associated with the user.
     * It is a one-to-many relationship with the Phone entity, with cascade type ALL and orphan removal enabled.
     */
    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = "user")
    private List<Phone> phones;

}